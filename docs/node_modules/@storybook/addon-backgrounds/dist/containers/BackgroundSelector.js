"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.from");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.map");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.create");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.get-prototype-of");

require("core-js/modules/es.object.set-prototype-of");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.reflect.construct");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BackgroundSelector = void 0;

var _react = _interopRequireWildcard(require("react"));

var _memoizerific = _interopRequireDefault(require("memoizerific"));

var _api = require("@storybook/api");

var _theming = require("@storybook/theming");

var _clientLogger = require("@storybook/client-logger");

var _components = require("@storybook/components");

var _constants = require("../constants");

var _ColorIcon = require("../components/ColorIcon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var iframeId = 'storybook-preview-iframe';
var createBackgroundSelectorItem = (0, _memoizerific["default"])(1000)(function (id, name, value, hasSwatch, change) {
  return {
    id: id || name,
    title: name,
    onClick: function onClick() {
      change({
        selected: value,
        name: name
      });
    },
    value: value,
    right: hasSwatch ? /*#__PURE__*/_react["default"].createElement(_ColorIcon.ColorIcon, {
      background: value
    }) : undefined
  };
});
var getDisplayedItems = (0, _memoizerific["default"])(10)(function (backgrounds, selectedBackgroundColor, change) {
  var backgroundSelectorItems = backgrounds.map(function (_ref) {
    var name = _ref.name,
        value = _ref.value;
    return createBackgroundSelectorItem(null, name, value, true, change);
  });

  if (selectedBackgroundColor !== 'transparent') {
    return [createBackgroundSelectorItem('reset', 'Clear background', 'transparent', null, change)].concat(_toConsumableArray(backgroundSelectorItems));
  }

  return backgroundSelectorItems;
});

var getSelectedBackgroundColor = function getSelectedBackgroundColor() {
  var backgrounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var currentSelectedValue = arguments.length > 1 ? arguments[1] : undefined;
  var defaultName = arguments.length > 2 ? arguments[2] : undefined;

  if (currentSelectedValue === 'transparent') {
    return 'transparent';
  }

  if (backgrounds.find(function (background) {
    return background.value === currentSelectedValue;
  })) {
    return currentSelectedValue;
  }

  var defaultBackground = backgrounds.find(function (background) {
    return background.name === defaultName;
  });

  if (defaultBackground) {
    return defaultBackground.value;
  }

  if (defaultName) {
    var availableColors = backgrounds.map(function (background) {
      return background.name;
    }).join(', ');

    _clientLogger.logger.warn("Backgrounds Addon: could not find the default color \"".concat(defaultName, "\".\n      These are the available colors for your story based on your configuration: ").concat(availableColors));
  }

  return 'transparent';
};

var getBackgroundsConfig = function getBackgroundsConfig(_ref2) {
  var _backgroundsParameter;

  var api = _ref2.api,
      state = _ref2.state;
  var backgroundsParameter = api.getCurrentParameter(_constants.PARAM_KEY);
  var selectedBackgroundValue = state.addons[_constants.PARAM_KEY] || null;

  if (Array.isArray(backgroundsParameter)) {
    _clientLogger.logger.warn('Addon Backgrounds api has changed in Storybook 6.0. Please refer to the migration guide: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md');
  }

  var isBackgroundsEmpty = !(backgroundsParameter === null || backgroundsParameter === void 0 ? void 0 : (_backgroundsParameter = backgroundsParameter.values) === null || _backgroundsParameter === void 0 ? void 0 : _backgroundsParameter.length);

  if ((backgroundsParameter === null || backgroundsParameter === void 0 ? void 0 : backgroundsParameter.disable) || isBackgroundsEmpty) {
    // other null properties are necessary to keep the same return shape for Consumer memoization
    return {
      disable: true,
      backgrounds: null,
      selectedBackground: null,
      defaultBackgroundName: null
    };
  }

  return {
    disable: false,
    backgrounds: backgroundsParameter === null || backgroundsParameter === void 0 ? void 0 : backgroundsParameter.values,
    selectedBackground: selectedBackgroundValue,
    defaultBackgroundName: backgroundsParameter === null || backgroundsParameter === void 0 ? void 0 : backgroundsParameter["default"]
  };
};

var BackgroundSelector = /*#__PURE__*/function (_Component) {
  _inherits(BackgroundSelector, _Component);

  var _super = _createSuper(BackgroundSelector);

  function BackgroundSelector() {
    var _this;

    _classCallCheck(this, BackgroundSelector);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.change = function (_ref3) {
      var selected = _ref3.selected,
          name = _ref3.name;
      var api = _this.props.api;

      if (typeof selected === 'string') {
        api.setAddonState(_constants.PARAM_KEY, selected);
      }

      api.emit(_constants.EVENTS.UPDATE, {
        selected: selected,
        name: name
      });
    };

    return _this;
  }

  _createClass(BackgroundSelector, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/_react["default"].createElement(_api.Consumer, {
        filter: getBackgroundsConfig
      }, function (_ref4) {
        var disable = _ref4.disable,
            backgrounds = _ref4.backgrounds,
            selectedBackground = _ref4.selectedBackground,
            defaultBackgroundName = _ref4.defaultBackgroundName;

        if (disable) {
          return null;
        }

        var selectedBackgroundColor = getSelectedBackgroundColor(backgrounds, selectedBackground, defaultBackgroundName);
        return /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, selectedBackgroundColor ? /*#__PURE__*/_react["default"].createElement(_theming.Global, {
          styles: function styles(theme) {
            return _defineProperty({}, "#".concat(iframeId), {
              background: selectedBackgroundColor === 'transparent' ? theme.background.content : selectedBackgroundColor
            });
          }
        }) : null, /*#__PURE__*/_react["default"].createElement(_components.WithTooltip, {
          placement: "top",
          trigger: "click",
          closeOnClick: true,
          tooltip: function tooltip(_ref6) {
            var onHide = _ref6.onHide;
            return /*#__PURE__*/_react["default"].createElement(_components.TooltipLinkList, {
              links: getDisplayedItems(backgrounds, selectedBackgroundColor, function (i) {
                _this2.change(i);

                onHide();
              })
            });
          }
        }, /*#__PURE__*/_react["default"].createElement(_components.IconButton, {
          key: "background",
          title: "Change the background of the preview",
          active: selectedBackgroundColor !== 'transparent'
        }, /*#__PURE__*/_react["default"].createElement(_components.Icons, {
          icon: "photo"
        }))));
      });
    }
  }]);

  return BackgroundSelector;
}(_react.Component);

exports.BackgroundSelector = BackgroundSelector;