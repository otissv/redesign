"use strict";

require("core-js/modules/es.array.slice");

require("core-js/modules/es.object.define-properties");

require("core-js/modules/es.object.freeze");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Welcome = void 0;

var _litHtml = require("lit-html");

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  <div class=\"main\">\n    <h1>Welcome to Storybook for Web Components</h1>\n    <p>This is a UI component dev environment for your plain HTML snippets.</p>\n    <p>\n      We've added some basic stories inside the <code class=\"code\">stories</code> directory.\n      <br />\n      A story is a single state of one or more UI components. You can have as many stories as you\n      want.\n      <br />\n      (Basically a story is like a visual test case.)\n    </p>\n    <p>\n      See these sample\n      <a class=\"link\" href=\"#\" data-sb-kind=\"Demo Card\" data-sb-story=\"Front\">stories</a>\n    </p>\n    <p>\n      Just like that, you can add your own snippets as stories.\n      <br />\n      You can also edit those snippets and see changes right away.\n      <br />\n    </p>\n    <p>\n      Usually we create stories with smaller UI components in the app.<br />\n      Have a look at the\n      <a class=\"link\" href=\"https://storybook.js.org/basics/writing-stories\" target=\"_blank\">\n        Writing Stories\n      </a>\n      section in our documentation.\n    </p>\n  </div>\n\n  <style>\n    .main {\n      padding: 15px;\n      line-height: 1.4;\n      font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif;\n      background-color: #ffffff;\n    }\n\n    .logo {\n      width: 256px;\n      margin: 15px;\n    }\n\n    .code {\n      font-size: 15px;\n      font-weight: 600;\n      padding: 2px 5px;\n      border: 1px solid #eae9e9;\n      border-radius: 4px;\n      background-color: #f3f2f2;\n      color: #3a3a3a;\n    }\n  </style>\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Welcome = function Welcome() {
  return (0, _litHtml.html)(_templateObject());
}; // eslint-disable-next-line no-undef


exports.Welcome = Welcome;
customElements.define('input', Welcome);