"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

require("core-js/modules/es.symbol");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.join");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.string.bold");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListItem = exports.Item = exports.Expander = void 0;

var _global = require("global");

var _react = _interopRequireWildcard(require("react"));

var _polished = require("polished");

var _theming = require("@storybook/theming");

var _components = require("@storybook/components");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Expander = _theming.styled.span(function (_ref) {
  var theme = _ref.theme,
      depth = _ref.depth;
  return {
    position: 'absolute',
    display: 'block',
    left: 0,
    top: 9,
    width: 0,
    height: 0,
    borderTop: '3.5px solid transparent',
    borderBottom: '3.5px solid transparent',
    borderLeft: "3.5px solid ".concat(theme.base === 'dark' ? theme.color.lighter : theme.color.medium),
    transition: 'transform .1s ease-out',
    marginLeft: depth * 15 + 9
  };
}, function (_ref2) {
  var _ref2$isExpanded = _ref2.isExpanded,
      isExpanded = _ref2$isExpanded === void 0 ? false : _ref2$isExpanded;
  return isExpanded ? {
    transform: 'rotateZ(90deg)'
  } : {};
});

exports.Expander = Expander;
var Icon = (0, _theming.styled)(_components.Icons)({
  position: 'relative',
  flex: 'none',
  width: 10,
  height: 10,
  marginRight: 6
}, function (_ref3) {
  var icon = _ref3.icon;

  if (icon === 'folder') {
    return {
      color: '#774dd7'
    };
  }

  if (icon === 'component') {
    return {
      color: '#1ea7fd'
    };
  }

  if (icon === 'bookmarkhollow' || _global.DOCS_MODE && icon === 'document') {
    return {
      color: '#37d5d3'
    };
  }

  if (icon === 'document') {
    return {
      color: '#ffae00'
    };
  }

  return {};
}, function (_ref4) {
  var _ref4$isSelected = _ref4.isSelected,
      isSelected = _ref4$isSelected === void 0 ? false : _ref4$isSelected,
      theme = _ref4.theme;
  return isSelected ? {
    color: 'inherit',
    fontWeight: theme.typography.weight.bold
  } : {};
});

var Item = _theming.styled.a(function (_ref5) {
  var theme = _ref5.theme;
  return {
    position: 'relative',
    textDecoration: 'none',
    fontSize: theme.typography.size.s2 - 1,
    lineHeight: '16px',
    paddingTop: 4,
    paddingBottom: 4,
    paddingRight: theme.layoutMargin * 2,
    display: 'flex',
    alignItems: 'center',
    flex: 1,
    background: 'transparent'
  };
}, function (_ref6) {
  var depth = _ref6.depth;
  return {
    paddingLeft: depth * 15 + 19
  };
}, function (_ref7) {
  var theme = _ref7.theme,
      isSelected = _ref7.isSelected;
  return isSelected ? {
    cursor: 'default',
    background: theme.color.secondary,
    color: theme.color.lightest,
    fontWeight: theme.typography.weight.bold
  } : {
    cursor: 'pointer',
    color: theme.base === 'light' ? theme.color.defaultText : (0, _polished.transparentize)(0.2, theme.color.defaultText),
    '&:hover, &:focus': {
      color: theme.color.defaultText,
      background: theme.background.hoverable,
      outline: 'none'
    }
  };
});

exports.Item = Item;

var ListItem = function ListItem(_ref8) {
  var name = _ref8.name,
      id = _ref8.id,
      kind = _ref8.kind,
      refId = _ref8.refId,
      _ref8$isComponent = _ref8.isComponent,
      isComponent = _ref8$isComponent === void 0 ? false : _ref8$isComponent,
      _ref8$isLeaf = _ref8.isLeaf,
      isLeaf = _ref8$isLeaf === void 0 ? false : _ref8$isLeaf,
      _ref8$isExpanded = _ref8.isExpanded,
      isExpanded = _ref8$isExpanded === void 0 ? false : _ref8$isExpanded,
      _ref8$isSelected = _ref8.isSelected,
      isSelected = _ref8$isSelected === void 0 ? false : _ref8$isSelected,
      className = _ref8.className,
      depth = _ref8.depth,
      props = _objectWithoutProperties(_ref8, ["name", "id", "kind", "refId", "isComponent", "isLeaf", "isExpanded", "isSelected", "className", "depth"]);

  var iconName;

  if (isLeaf && isComponent) {
    iconName = 'document';
  } else if (isLeaf) {
    iconName = 'bookmarkhollow';
  } else if (isComponent) {
    iconName = 'component';
  } else {
    iconName = 'folder';
  }

  var classes = (0, _react.useMemo)(function () {
    return [className, 'sidebar-item', isSelected ? 'selected' : null].filter(Boolean).join(' ');
  }, [className, isSelected]);
  return /*#__PURE__*/_react["default"].createElement(Item, _extends({
    isSelected: isSelected,
    depth: depth
  }, props, {
    className: classes,
    id: id
  }), !isLeaf ? /*#__PURE__*/_react["default"].createElement(Expander, {
    className: "sidebar-expander",
    depth: depth,
    isExpanded: isExpanded
  }) : null, /*#__PURE__*/_react["default"].createElement(Icon, {
    className: "sidebar-svg-icon",
    icon: iconName,
    isSelected: isSelected
  }), /*#__PURE__*/_react["default"].createElement("span", null, name));
};

exports.ListItem = ListItem;
ListItem.displayName = "ListItem";