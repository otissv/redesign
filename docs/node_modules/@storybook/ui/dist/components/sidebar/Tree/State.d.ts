import React from 'react';
import { Story, StoriesHash } from '@storybook/api';
import { BooleanSet, DataSet } from '../RefHelpers';
export declare type ItemType = StoriesHash[keyof StoriesHash];
export declare const collapseAllStories: (stories: StoriesHash) => StoriesHash;
export declare const collapseDocsOnlyStories: (storiesHash: StoriesHash) => StoriesHash;
export declare const ExpanderContext: React.Context<{
    setExpanded: React.Dispatch<React.SetStateAction<Record<string, boolean>>>;
    expandedSet: BooleanSet;
}>;
export declare const useDataset: (storiesHash: DataSet, filter: string, storyId: string) => {
    roots: (import("@storybook/api").Root | import("@storybook/api").Group | Story)[];
    others: (import("@storybook/api").Root | import("@storybook/api").Group | Story)[];
    length: number;
    dataSet: Record<string, import("@storybook/api").Root | import("@storybook/api").Group | Story>;
    selectedSet: Record<string, boolean>;
    expandedSet: {
        [x: string]: boolean;
    };
    setExpanded: React.Dispatch<React.SetStateAction<Record<string, boolean>>>;
};
