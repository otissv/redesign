import React from 'react'
import { createTheme } from '@redesign/theme'
import { Base } from '../Base'

const theme: any = createTheme()

export default {
  title: 'Theme',
  menu: 'theme',
  // component: Base,
}

function Box(props: any) {
  return <Base theme={theme} {...props}></Base>
}

function Td(props: any) {
  const css = {
    borderTop: `1px solid #ececec`,
    padding: '20px 10px 10px 10px',
    verticalAlign: 'top',
  }
  return <Base as="td" theme={theme} css={css} {...props}></Base>
}

function Th(props: any) {
  const css = {
    textAlign: 'left',
    paddingLeft: '10px',
  }
  return <Base as="th" theme={theme} css={css} {...props}></Base>
}

function extractColor(str: string) {
  const value = (str as string).match(
    /(?:^|[ ])#([a-zA-Z0-9]+)|(?:^|[ ])hsla(.*)/
  )?.[0]
  return value ? value.trim() : value
}

export const Border = () => {
  return (
    <Box display="flex" flexWrap="wrap">
      <table>
        <thead>
          <tr>
            <Th>Key</Th>
            <Th>Value</Th>
            <Th>Example</Th>
          </tr>
        </thead>
        <tbody>
          {Object.entries(theme.border).map(([key, value]) => {
            // const color = (value as string).match(
            //   /(?:^|[ ])#([a-zA-Z0-9]+)|(?:^|[ ])hsla(.*)/
            // )?.[0]
            const borderColor = extractColor(value as string)
            const borderStyle = (value as string).split(' ')[1] || 'solid'

            return (
              <tr key={key}>
                <Td>{key}</Td>
                <Td>{value as string}</Td>
                <Td>
                  <div
                    style={{
                      height: '100px',
                      width: '100px',
                      border: `1px ${borderStyle} ${borderColor}`,
                    }}
                  ></div>
                </Td>
              </tr>
            )
          })}
        </tbody>
      </table>
    </Box>
  )
}

export const Color = () => {
  return (
    <Box display="flex" flexWrap="wrap">
      <table>
        <thead>
          <tr>
            <Th>Key</Th>
            <Th>Value</Th>
            <Th>Example</Th>
          </tr>
        </thead>
        <tbody>
          {Object.entries(theme.color).map(([key, color]) => {
            // const color = (value as string).match(
            //   /(?:^|[ ])#([a-zA-Z0-9]+)|(?:^|[ ])hsla(.*)/

            return (
              <tr key={key}>
                <Td>{key}</Td>
                <Td>{color as string}</Td>
                <Td>
                  <div
                    style={{
                      height: '100px',
                      width: '100px',
                      background: color as string,
                    }}
                  ></div>
                </Td>
              </tr>
            )
          })}
        </tbody>
      </table>
    </Box>
  )
}

export const Elevate = () => {
  return (
    <Box display="flex" flexWrap="wrap">
      <table>
        <thead>
          <tr>
            <Th>Key</Th>
            <Th>Value</Th>
            <Th>Example</Th>
          </tr>
        </thead>
        <tbody>
          {Object.entries(theme.elevate).map(([key, elevate]) => {
            // const color = (value as string).match(
            //   /(?:^|[ ])#([a-zA-Z0-9]+)|(?:^|[ ])hsla(.*)/

            return (
              <tr key={key}>
                <Td>{key}</Td>
                <Td>{elevate as string}</Td>
                <Td>
                  <div
                    style={{
                      height: '100px',
                      width: '100px',
                      boxShadow: elevate as string,
                    }}
                  ></div>
                </Td>
              </tr>
            )
          })}
        </tbody>
      </table>
    </Box>
  )
}

export const Font = () => {
  return (
    <Box display="flex" flexWrap="wrap">
      <table>
        <thead>
          <tr>
            <Th>Key</Th>
            <Th>Value</Th>
            <Th>Example</Th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <Td>base</Td>
            <Td>{theme.font.base}</Td>
            <Td style={{ fontSize: theme.font.base }}>Base font size</Td>
          </tr>

          <tr>
            <Td>color</Td>
            <Td>{theme.font.color}</Td>
            <Td style={{ color: theme.font.color }}>Text color</Td>
          </tr>

          <tr>
            <Td>code</Td>
            <Td>{theme.font.code}</Td>
            <Td style={{ fontFamily: theme.font.code }}>Code font</Td>
          </tr>

          <tr>
            <Td>serif</Td>
            <Td>{theme.font.serif}</Td>
            <Td style={{ fontFamily: theme.font.serif }}>Serif font</Td>
          </tr>

          <tr>
            <Td>sans</Td>
            <Td>{theme.font.sans}</Td>
            <Td style={{ fontFamily: theme.font.sans }}>Sans font</Td>
          </tr>

          {Object.entries(theme.font).map(([key, value]) => {
            // const color = (value as string).match(
            //   /(?:^|[ ])#([a-zA-Z0-9]+)|(?:^|[ ])hsla(.*)/

            return (
              <tr key={key}>
                <Td>{key}</Td>
              </tr>
            )
          })}
        </tbody>
      </table>
      Font Size
    </Box>
  )
}
